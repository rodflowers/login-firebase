{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar axios = require(\"axios\");\n\nvar firebase = require(\"../firebase\");\n\nexport var axiosPublic = axios.create({\n  baseURL: \"http://localhost:8000/api/v1/\"\n});\nexport var axiosAuth = axios.create({\n  baseURL: \"http://localhost:8000/api/v1/\"\n});\naxiosAuth.interceptors.request.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return firebase.auth().currenuser;\n\n          case 2:\n            user = _context.sent;\n\n            if (!user) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return user.getIdToken(true);\n\n          case 6:\n            _context.t0 = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 9:\n            _context.t0 = \"\";\n\n          case 10:\n            config.headers.token = _context.t0;\n            return _context.abrupt(\"return\", config);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/home/rodflow/Develop/React/nextjs/loginmd/actions/axios.js"],"names":["axios","require","firebase","axiosPublic","create","baseURL","axiosAuth","interceptors","request","use","config","auth","currenuser","user","getIdToken","headers","token","error","Promise","reject"],"mappings":";;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AAEA,OAAO,IAAME,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAa;AACtCC,EAAAA,OAAO,EAAE;AAD6B,CAAb,CAApB;AAIP,OAAO,IAAMC,SAAS,GAAGN,KAAK,CAACI,MAAN,CAAa;AACpCC,EAAAA,OAAO,EAAE;AAD2B,CAAb,CAAlB;AAIPC,SAAS,CAACC,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B;AAAA,sEACE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBR,QAAQ,CAACS,IAAT,GAAgBC,UADnC;;AAAA;AACMC,YAAAA,IADN;;AAAA,iBAEyBA,IAFzB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEsCA,IAAI,CAACC,UAAL,CAAgB,IAAhB,CAFtC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,0BAE8D,EAF9D;;AAAA;AAEEJ,YAAAA,MAAM,CAACK,OAAP,CAAeC,KAFjB;AAAA,6CAGSN,MAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAAA;AAAA;AAAA;AAAA,KAME,UAACO,KAAD,EAAW;AACT,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CARH","sourcesContent":["const axios = require(\"axios\");\nconst firebase = require(\"../firebase\");\n\nexport const axiosPublic = axios.create({\n  baseURL: \"http://localhost:8000/api/v1/\",\n});\n\nexport const axiosAuth = axios.create({\n  baseURL: \"http://localhost:8000/api/v1/\",\n});\n\naxiosAuth.interceptors.request.use(\n  async (config) => {\n    let user = await firebase.auth().currenuser;\n    config.headers.token = user ? await user.getIdToken(true) : \"\";\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n"]},"metadata":{},"sourceType":"module"}