{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { useEffect, useContext } from \"react\";\nimport firebase from \"../firebase\";\nimport { Context } from \"../context\";\nimport axios from \"axios\";\n\nconst FirebaseAuthState = ({\n  children\n}) => {\n  const {\n    dispatch\n  } = useContext(Context);\n  useEffect(() => {\n    return firebase.auth().onIdTokenChanged(async user => {\n      if (!user) {\n        dispatch({\n          type: \"LOGOUT\"\n        });\n      } else {\n        const {\n          token\n        } = await user.getIdTokenResult();\n        console.log(\"TOKEN\", token);\n        axios.post(\"http://localhost:8000/api/v1/auth\", {}, {\n          headers: {\n            token\n          }\n        }).then(res => {\n          console.log(\"RES =====> \", res); // dispatch({\n          //   type: \"LOGIN\",\n          //   payload: res.data,\n          // });\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\nexport default FirebaseAuthState;","map":{"version":3,"sources":["/home/rodflow/Develop/React/nextjs/loginmd/components/FirebaseAuthState.js"],"names":["React","useEffect","useContext","firebase","Context","axios","FirebaseAuthState","children","dispatch","auth","onIdTokenChanged","user","type","token","getIdTokenResult","console","log","post","headers","then","res"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAeN,UAAU,CAACE,OAAD,CAA/B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOE,QAAQ,CAACM,IAAT,GAAgBC,gBAAhB,CAAiC,MAAOC,IAAP,IAAgB;AACtD,UAAI,CAACA,IAAL,EAAW;AACTH,QAAAA,QAAQ,CAAC;AACPI,UAAAA,IAAI,EAAE;AADC,SAAD,CAAR;AAGD,OAJD,MAIO;AACL,cAAM;AAAEC,UAAAA;AAAF,YAAY,MAAMF,IAAI,CAACG,gBAAL,EAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACAR,QAAAA,KAAK,CACFY,IADH,CAEI,mCAFJ,EAGI,EAHJ,EAII;AACEC,UAAAA,OAAO,EAAE;AACPL,YAAAA;AADO;AADX,SAJJ,EAUGM,IAVH,CAUSC,GAAD,IAAS;AACbL,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,GAA3B,EADa,CAEb;AACA;AACA;AACA;AACD,SAhBH;AAiBD;AACF,KA1BM,CAAP;AA2BD,GA5BQ,EA4BN,EA5BM,CAAT;AA6BA,sBAAO;AAAA,cAAGb;AAAH,mBAAP;AACD,CAjCD;;AAmCA,eAAeD,iBAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport firebase from \"../firebase\";\nimport { Context } from \"../context\";\nimport axios from \"axios\";\n\nconst FirebaseAuthState = ({ children }) => {\n  const { dispatch } = useContext(Context);\n\n  useEffect(() => {\n    return firebase.auth().onIdTokenChanged(async (user) => {\n      if (!user) {\n        dispatch({\n          type: \"LOGOUT\",\n        });\n      } else {\n        const { token } = await user.getIdTokenResult();\n        console.log(\"TOKEN\", token);\n        axios\n          .post(\n            \"http://localhost:8000/api/v1/auth\",\n            {},\n            {\n              headers: {\n                token,\n              },\n            }\n          )\n          .then((res) => {\n            console.log(\"RES =====> \", res);\n            // dispatch({\n            //   type: \"LOGIN\",\n            //   payload: res.data,\n            // });\n          });\n      }\n    });\n  }, []);\n  return <>{children}</>;\n};\n\nexport default FirebaseAuthState;\n"]},"metadata":{},"sourceType":"module"}