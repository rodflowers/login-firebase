{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { useEffect, useContext, useState } from \"react\";\nimport firebase from \"../firebase\";\nimport { Context } from \"../context\";\nimport { axiosAuth } from \"../actions/axios\";\nimport { setCookie, destroyCookie } from \"nookies\";\n\nconst FirebaseAuthState = ({\n  children\n}) => {\n  const {\n    dispatch\n  } = useContext(Context);\n  const {\n    0: cont,\n    1: setCont\n  } = useState(0);\n  useEffect(() => {\n    return firebase.auth().onIdTokenChanged(async user => {\n      if (!user) {\n        dispatch({\n          type: \"LOGOUT\"\n        });\n        destroyCookie(null, \"token\");\n        setCookie(null, \"token\", \"\", {});\n      } else {\n        setCont(cont + 1);\n        console.log(cont);\n        const {\n          token\n        } = await user.getIdTokenResult(); // set token to cookie\n\n        destroyCookie(null, \"token\");\n        setCookie(null, \"token\", token, {});\n        axiosAuth.post(\"/auth\", {}).then(res => {\n          console.log(\"RES =====> \", res);\n          dispatch({\n            type: \"LOGIN\",\n            payload: res.data\n          });\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\nexport default FirebaseAuthState;","map":{"version":3,"sources":["/home/rodflow/Develop/React/nextjs/loginmd/components/FirebaseAuthState.js"],"names":["React","useEffect","useContext","useState","firebase","Context","axiosAuth","setCookie","destroyCookie","FirebaseAuthState","children","dispatch","cont","setCont","auth","onIdTokenChanged","user","type","console","log","token","getIdTokenResult","post","then","res","payload","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,SAAzC;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAeT,UAAU,CAACG,OAAD,CAA/B;AACA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,WAAOG,QAAQ,CAACU,IAAT,GAAgBC,gBAAhB,CAAiC,MAAOC,IAAP,IAAgB;AACtD,UAAI,CAACA,IAAL,EAAW;AACTL,QAAAA,QAAQ,CAAC;AACPM,UAAAA,IAAI,EAAE;AADC,SAAD,CAAR;AAGAT,QAAAA,aAAa,CAAC,IAAD,EAAO,OAAP,CAAb;AACAD,QAAAA,SAAS,CAAC,IAAD,EAAO,OAAP,EAAgB,EAAhB,EAAoB,EAApB,CAAT;AACD,OAND,MAMO;AACLM,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,cAAM;AAAEQ,UAAAA;AAAF,YAAY,MAAMJ,IAAI,CAACK,gBAAL,EAAxB,CAHK,CAIL;;AACAb,QAAAA,aAAa,CAAC,IAAD,EAAO,OAAP,CAAb;AACAD,QAAAA,SAAS,CAAC,IAAD,EAAO,OAAP,EAAgBa,KAAhB,EAAuB,EAAvB,CAAT;AACAd,QAAAA,SAAS,CAACgB,IAAV,CAAe,OAAf,EAAwB,EAAxB,EAA4BC,IAA5B,CAAkCC,GAAD,IAAS;AACxCN,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BK,GAA3B;AACAb,UAAAA,QAAQ,CAAC;AACPM,YAAAA,IAAI,EAAE,OADC;AAEPQ,YAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,WAAD,CAAR;AAID,SAND;AAOD;AACF,KAtBM,CAAP;AAuBD,GAxBQ,EAwBN,EAxBM,CAAT;AAyBA,sBAAO;AAAA,cAAGhB;AAAH,mBAAP;AACD,CA7BD;;AA+BA,eAAeD,iBAAf","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport firebase from \"../firebase\";\nimport { Context } from \"../context\";\nimport { axiosAuth } from \"../actions/axios\";\nimport { setCookie, destroyCookie } from \"nookies\";\n\nconst FirebaseAuthState = ({ children }) => {\n  const { dispatch } = useContext(Context);\n  const [cont, setCont] = useState(0);\n  useEffect(() => {\n    return firebase.auth().onIdTokenChanged(async (user) => {\n      if (!user) {\n        dispatch({\n          type: \"LOGOUT\",\n        });\n        destroyCookie(null, \"token\");\n        setCookie(null, \"token\", \"\", {});\n      } else {\n        setCont(cont + 1);\n        console.log(cont);\n        const { token } = await user.getIdTokenResult();\n        // set token to cookie\n        destroyCookie(null, \"token\");\n        setCookie(null, \"token\", token, {});\n        axiosAuth.post(\"/auth\", {}).then((res) => {\n          console.log(\"RES =====> \", res);\n          dispatch({\n            type: \"LOGIN\",\n            payload: res.data,\n          });\n        });\n      }\n    });\n  }, []);\n  return <>{children}</>;\n};\n\nexport default FirebaseAuthState;\n"]},"metadata":{},"sourceType":"module"}